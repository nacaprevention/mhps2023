{"version":3,"file":"component---src-pages-submissions-js-525f67086a7c2400b9d9.js","mappings":"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","sources":["webpack://statusview/./src/components/Header.js","webpack://statusview/./src/components/Layout.js","webpack://statusview/./src/pages/submissions.js"],"sourcesContent":["import React from 'react';\nimport logo from '../images/NACA.png';  \n\nconst Header = () => (\n    <div className=\"header-container\">\n      <div className=\"left-content\">\n        <img src={logo} alt=\"NACA Logo\" className=\"logo\"/>\n        <span className=\"welcome-text\">Mapping HIV Prevention Services, 2023</span>\n      </div>\n      <div>\n      <a \n        href=\"https://naca.gov.ng/\" \n        className=\"naca-home-btn\" \n        target=\"_blank\" \n        rel=\"noopener noreferrer\"> Go to NACA Home\n    </a>\n      </div>\n    </div>\n  );\n\n  export default Header;","import React from 'react';\nimport Header from '../components/Header';\n\nconst Layout = ({ children }) => (\n  <div>\n    <Header />\n    <main>{children}</main>\n    {/* Add footer or other common components here */}\n  </div>\n);\n\nexport default Layout;\n","import React, { useEffect, useState, useRef } from 'react';\nimport \"../styles/index.css\";\nimport logo from '../images/NACA.png';\nimport * as d3 from 'd3';\nimport Layout from '../components/Layout';\n\nconst states = [\n  \"All States\",\"Abia\", \"Adamawa\", \"Akwa Ibom\", \"Anambra\", \"Bauchi\", \"Bayelsa\", \"Benue\", \n  \"Borno\", \"Cross River\", \"Delta\", \"Ebonyi\", \"Edo\", \"Ekiti\", \"Enugu\", \n  \"Federal Capital Territory\", \"Gombe\", \"Imo\", \"Jigawa\", \"Kaduna\", \"Kano\", \n  \"Katsina\", \"Kebbi\", \"Kogi\", \"Kwara\", \"Lagos\", \"Nasarawa\", \"Niger\", \"Ogun\", \n  \"Ondo\", \"Osun\", \"Oyo\", \"Plateau\", \"Rivers\", \"Sokoto\", \"Taraba\", \"Yobe\", \"Zamfara\"\n];\n\nconst NationalMap = () => {\n  const svgRef = useRef(null);\n  const [currentHeading, setCurrentHeading] = useState(\"NIGERIA\");\n\n  useEffect(() => {\n    const svg = d3.select(svgRef.current);\n    const projection = d3.geoMercator()\n      .scale(3500)\n      .center([8.6753, 9.0820])\n      .translate([800 / 2, 800 / 2]);\n    const path = d3.geoPath().projection(projection);\n    const colorScale = d3.scaleThreshold()\n      .domain([0, 1, 2, 3]) \n      .range([\"#76ff0d\", \"#B11B10\",\"#FF7F00\", \"#ffc802\", \"#008000\"]);\n    \n        Promise.all([\n            d3.json(\"./nigeria_geojson.geojson\"),\n            d3.csv(\"./statusState.csv\")\n        ]).then(([geoData, serviceData]) => {\n          geoData.features.forEach(geoFeature => {\n            const serviceFeature = serviceData.find(s => s.state === geoFeature.properties.state);\n            if (serviceFeature) {\n                geoFeature.properties.currentValue = +serviceFeature.serviceProviders;\n            }\n        });\n        \n        \n        svg.selectAll(\"path\").remove(); \n        \n        svg.append(\"g\")\n            .selectAll(\"path\")\n            .data(geoData.features)\n            .enter().append(\"path\")\n            .attr(\"d\", path)\n            .attr(\"fill\", d => {\n              const value = d.properties.currentValue;\n              if (typeof value === \"undefined\") return \"#D3D3D3\";  // Add this line\n              return colorScale(value);\n          })                \n            .attr(\"stroke\", \"#FFFFFF\")\n            .on(\"mouseover\", function(event, d) {\n              d3.select(this).attr(\"stroke\", \"#000000\");\n                setCurrentHeading(d.properties.state);\n            })\n            .on(\"mouseout\", function(event, d) {\n                const value = d.properties.currentValue;\n                d3.select(this).attr(\"stroke\", \"#ffffff\");\n                setCurrentHeading(\"NIGERIA\");   \n            });\n            \n        const legendWidth = 40;\n        const legendHeight = 20;\n        const translateX = 600;\n        const translateY = 600;\n        \n        const legend = svg.append(\"g\")\n            .attr(\"transform\", `translate(${translateX},${translateY})`);\n        \n        let legendData = colorScale.domain().map(lowerBound => {\n            return [lowerBound, colorScale.invertExtent(colorScale(lowerBound))[1]];\n        });\n        \n        legendData = legendData.filter((value, index, self) => \n            self.findIndex(v => v[0] === value[0]) === index\n        );\n        \n        if (!legendData.some(arr => arr[0] === 0)) {\n            legendData.unshift([0, 0]);\n        }\n        \n        const legendGroups = legend.selectAll(\"g\")\n            .data(legendData)\n            .enter().append(\"g\")\n            .attr(\"transform\", (d, i) => `translate(0, ${i * legendHeight})`);\n        \n        legendGroups.append(\"rect\")\n            .attr(\"width\", legendWidth)\n            .attr(\"height\", legendHeight)\n            .attr(\"fill\", d => {\n                if (d[0] === 0) return \"#B11B10\";  \n                if (d[0] === 1) return \"#FF7F00\";\n                if (d[0] === 2) return \"#ffc802\";\n                if (d[0] === 3) return \"#008000\";\n                return colorScale(d[0]);\n            });    \n        \n        legendGroups.append(\"text\")\n            .attr(\"x\", legendWidth + 5)\n            .attr(\"y\", legendHeight / 2)\n            .attr(\"dy\", \"0.35em\")\n            .attr(\"font-size\", \"12px\")\n            .attr(\"font-family\", \"'Lato', sans-serif\") \n            .text(d => {\n                if (d[0] === 0) return `No submissions`; \n                if (d[0] === 1) return `No validations`; \n                if (d[0] === 2) return `Some validations`; \n                if (d[0] === 3) return `Completed validations`; \n                return `${d[0]} - ${d[1] - 1}`;\n            });\n\n          })\n          .catch(error => {\n              console.log(\"Error loading file:\", error);\n          });\n      }, []);\n        \n  return (\n    <Layout>\n            <div className=\"national-map\">\n        <div className=\"submissions map-header-container\">\n        <span className=\"updateTitle\">STATUS UPDATE: </span>\n            <span className=\"current-heading\"> {currentHeading}</span>\n        </div>\n        <div className=\"parent-container\">\n    <div className=\"map-component\">\n        <svg ref={svgRef} width={800} height={800}></svg>\n    </div>\n</div>\n  </div>  \n    </Layout>\n\n  );\n            }\nexport default NationalMap; "],"names":["Header","React","className","src","logo","alt","href","target","rel","_ref","children","NationalMap","svgRef","useRef","currentHeading","setCurrentHeading","useState","useEffect","svg","d3","current","projection","scale","center","translate","path","colorScale","domain","range","Promise","all","then","geoData","serviceData","features","forEach","geoFeature","serviceFeature","find","s","state","properties","currentValue","serviceProviders","selectAll","remove","append","data","enter","attr","d","value","on","event","this","legend","legendData","map","lowerBound","invertExtent","filter","index","self","findIndex","v","some","arr","unshift","legendGroups","i","legendWidth","legendHeight","text","catch","error","console","log","Layout","ref","width","height"],"sourceRoot":""}
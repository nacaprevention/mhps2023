{"version":3,"file":"component---src-templates-state-template-js-ac98ff01810aebe91cef.js","mappings":"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","sources":["webpack://statusview/./src/components/StateMap.js","webpack://statusview/./src/templates/stateTemplate.js","webpack://statusview/./node_modules/react-bootstrap/esm/Col.js","webpack://statusview/./node_modules/react-bootstrap/esm/Container.js","webpack://statusview/./node_modules/react-bootstrap/esm/Row.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\n\nfunction getStateGeoJSONPath(stateName) {\n    if (!stateName) {\n        console.warn(\"getStateGeoJSONPath was called with an undefined or null stateName.\");\n        return '';\n    }\n    return `/static/${stateName.replace(/\\s+/g, '_').toLowerCase()}.geojson`;\n}\n\nconst StateMap = ({ stateName, setCurrentHeading }) => {\n    const svgRef = useRef(null);\n    const offsetY = 150; \n\n    useEffect(() => {\n        const svg = d3.select(svgRef.current);\n        const width = 800;\n        const height = 800;\n\n        const projection = d3.geoMercator().translate([width / 2, (height / 2) - offsetY]);\n        const path = d3.geoPath().projection(projection);\n\n        const colorScale = d3.scaleThreshold()\n        .domain([1, 6, 11, 21, 31]) \n        .range([\"#76ff0d\", \"#a0d492\", \"#78b971\", \"#60a455\", \"#3e8d00\", \"#008000\"]);\n\n        const stateGeoJSONPath = getStateGeoJSONPath(stateName);\n\n\n        const fetchData = async () => {\n            try {\n                const geoData = await d3.json(stateGeoJSONPath);\n                const bounds = path.bounds(geoData);\n                const centroid = d3.geoCentroid(geoData);\n                const dx = bounds[1][0] - bounds[0][0];\n                const dy = bounds[1][1] - bounds[0][1];\n                const scale = 0.1 / Math.max(dx / width, dy / height) * width;\n                projection.scale(scale).center(centroid);\n\n                const serviceData = await d3.csv(\"/static/service_providers.csv\");\n                geoData.features.forEach(geoFeature => {\n                    const serviceFeature = serviceData.find(s => s.lga_name === geoFeature.properties.lga_name);\n                    if (serviceFeature) {\n                        geoFeature.properties.currentValue = +serviceFeature.lga_name;\n                    }\n                });\n\n                svg.selectAll(\"path\").remove();\n                svg.append(\"g\")\n                    .selectAll(\"path\")\n                    .data(geoData.features)\n                    .enter().append(\"path\")\n                    .attr(\"d\", path)\n                    .attr(\"fill\", d => {\n                        const value = d.properties.currentValue;\n                        if (value === undefined) {\n                            console.error(`Missing value for lga: ${d.properties.lga_name}`);\n                            return \"#878787\";\n                        }\n                        return colorScale(value);\n                    })\n                    .attr(\"stroke\", \"#FFFFFF\")\n                    .on(\"mouseover\", function (event, d) {\n                        d3.select(this).attr(\"fill\", \"#B11B10\");\n                        setCurrentHeading(d.properties.lga_name);\n                    })\n                    .on(\"mouseout\", function (event, d) {\n                        d3.select(this).attr(\"fill\", colorScale(d.properties.currentValue));\n                        setCurrentHeading(stateName);\n                    })\n                    .on(\"click\", function(event, d) {\n                        const lgaURL = `/state/${stateName.toLowerCase().replace(/\\s+/g, '-')}/${d.properties.lga_name.toLowerCase().replace(/\\s+/g, '-')}/`;\n                        window.location.href = lgaURL;\n                    })\n                    \n            } catch (error) {\n                console.log(`Failed loading data for state ${stateName}.`, error);\n            }\n        };\n\n        fetchData();\n    }, [stateName]);\n\n    return (\n        <div className=\"state-map\">\n            <div className='map_position'>\n                <svg ref={svgRef} width={800} height={800}></svg>\n            </div>\n        </div>\n    );\n};\n\nexport default StateMap;\n","import React, { useState } from 'react';\nimport { graphql } from 'gatsby';\nimport StateMap from '../components/StateMap';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport logo from '../images/NACA.png';\nimport { navigate } from 'gatsby';\n\n\nconst states = [\n  \"NATIONAL\",\"Abia\", \"Adamawa\", \"Akwa Ibom\", \"Anambra\", \"Bauchi\", \"Bayelsa\", \"Benue\", \n  \"Borno\", \"Cross River\", \"Delta\", \"Ebonyi\", \"Edo\", \"Ekiti\", \"Enugu\", \n  \"Federal Capital Territory\", \"Gombe\", \"Imo\", \"Jigawa\", \"Kaduna\", \"Kano\", \n  \"Katsina\", \"Kebbi\", \"Kogi\", \"Kwara\", \"Lagos\", \"Nasarawa\", \"Niger\", \"Ogun\", \n  \"Ondo\", \"Osun\", \"Oyo\", \"Plateau\", \"Rivers\", \"Sokoto\", \"Taraba\", \"Yobe\", \"Zamfara\"\n];\n\nconst services = [\n  \"All Services\",\n  \"Condom Distribtion\",\n  \"Family Life and HIV/AIDS Education (FLHE)/Sexuality Education\",\n  \"Gender and Human Rights (GHR)\",\n  \"Harm Reduction: Medication-Assisted Treatment (MAT)\",\n  \"Harm Reduction: Needle and Syringe Exchange\",\n  \"HIV Self-Testing (HIVST)\",\n  \"HIV Testing Services (HTS)\",\n  \"Mental Health Services\",\n  \"Pre-Exposure Prophylaxis (PrEP)\",\n  \"Social and Behaviour Change Communication (SBCC)\",\n  \"STI Screening and Treatment\",\n  \"Technical Assistance (TA)\"\n];\n\nconst populations = [\n  \"All Populations\",\n  \"AGYW in school\",\n  \"AGYW out of school\",\n  \"ABYM in school\",\n  \"ABYM out of school\",\n  \"Children living with HIV\",\n  \"General population\",\n  \"HIV-exposed infants\",\n  \"IDP\",\n  \"KP_FSW\",\n  \"KP_MSM\",\n  \"KP_people in enclosed settings\",\n  \"KP_PWID\",\n  \"KP_transgender\",\n  \"OVC\",\n  \"Parents\",\n  \"People living with disabilities\",\n  \"PLHIV\",\n  \"Serodiscordant couples\",\n  \"Teachers\",\n  \"Faith Leaders\",\n  \"Fishermen\",\n  \"Pastoralists\",\n  \"Transport Workers\"\n];\n\nconst locations = [\n  \"All Locations\",\n  \"Community\",\n  \"Facility\"\n];\n\n\nexport const query = graphql`\nquery($state: String!) {\n  allServiceProvidersCsv(filter: { state: { eq: $state } }) {\n    nodes {\n      state\n      lga_name\n    }\n  }\n}\n`;\n\n\n\n\nconst StateTemplate = ({ data }) => {\n  const stateName = data.allServiceProvidersCsv.nodes[0]?.state;\n  const [currentHeading, setCurrentHeading] = useState(stateName || \"N/A\");\n  console.log(\"State Name in StateTemplate:\", stateName);\n  const [selectedService, setSelectedService] = React.useState(services[0]);\n  const [selectedPopulation, setSelectedPopulation] = React.useState(populations[0]);\n  const [selectedLocation, setSelectedLocation] = React.useState(locations[0]);\n  const [selectedLGA, setSelectedLGA] = React.useState(\"All LGAs\");\n\n\n  return (\n    <div className=\"state-map\">\n      <div className=\"header-container\">\n        <img src={logo} alt=\"NACA Logo\" className=\"logo\" />\n        <span className=\"welcome-text\">Mapping HIV Prevention Services, 2023</span>\n        <span className=\"separator\"> - </span>\n        <span className=\"current-heading\">{currentHeading}</span>\n      </div>\n\n      <Container>\n        <Row className='row'>\n          <Col sm={8}>\n          <StateMap stateName={stateName} setCurrentHeading={setCurrentHeading} currentHeading={currentHeading} />\n          </Col>\n          <Col sm={4}>\n            <h2>Filter by:</h2>\n            <h3>Local Government Area (LGA)</h3>\n            <DropdownButton id=\"dropdown-basic-button_filter_lga\" title={selectedLGA} className=\"scrollable-dropdown\">\n  <Dropdown.Item key=\"All LGAs\" onClick={() => setSelectedLGA(\"All LGAs\")}>\n    All LGAs\n  </Dropdown.Item>\n  {data.allServiceProvidersCsv.nodes.map(node => (\n    <Dropdown.Item \n      key={node.lga_name} \n      onClick={() => {\n        setSelectedLGA(node.lga_name);\n        navigate(`/state/${stateName.toLowerCase().replace(/\\s+/g, '-')}/${node.lga_name.toLowerCase().replace(/\\s+/g, '-')}/`); // LGA page navigation\n        \n      }}>\n      {node.lga_name}\n    </Dropdown.Item>\n  ))}\n</DropdownButton>\n\n\n            <h3>Service</h3>\n            <DropdownButton id=\"dropdown-basic-button_filter_service\" title={selectedService} className=\"scrollable-dropdown\">\n              {services.map(service => (\n                <Dropdown.Item key={service} onClick={() => setSelectedService(service)}>\n                  {service}\n                </Dropdown.Item>\n              ))}\n            </DropdownButton>\n\n            <h3>Target Population</h3>\n            <DropdownButton id=\"dropdown-basic-button_filter_population\" title={selectedPopulation} className=\"scrollable-dropdown\">\n              {populations.map(population => (\n                <Dropdown.Item key={population} onClick={() => setSelectedPopulation(population)}>\n                  {population}\n                </Dropdown.Item>\n              ))}\n            </DropdownButton>\n\n            <h3>Location</h3>\n            <DropdownButton id=\"dropdown-basic-button_filter_location\" title={selectedLocation} className=\"scrollable-dropdown\">\n              {locations.map(location => (\n                <Dropdown.Item key={location} onClick={() => setSelectedLocation(location)}>\n                  {location}\n                </Dropdown.Item>\n              ))}\n            </DropdownButton>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n};\n\nexport default StateTemplate;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useCol({\n  as,\n  bsPrefix,\n  className,\n  ...props\n}) {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'col');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const spans = [];\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let span;\n    let offset;\n    let order;\n    if (typeof propValue === 'object' && propValue != null) {\n      ({\n        span,\n        offset,\n        order\n      } = propValue);\n    } else {\n      span = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (span) spans.push(span === true ? `${bsPrefix}${infix}` : `${bsPrefix}${infix}-${span}`);\n    if (order != null) classes.push(`order${infix}-${order}`);\n    if (offset != null) classes.push(`offset${infix}-${offset}`);\n  });\n  return [{\n    ...props,\n    className: classNames(className, ...spans, ...classes)\n  }, {\n    as,\n    bsPrefix,\n    spans\n  }];\n}\nconst Col = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n(props, ref) => {\n  const [{\n    className,\n    ...colProps\n  }, {\n    as: Component = 'div',\n    bsPrefix,\n    spans\n  }] = useCol(props);\n  return /*#__PURE__*/_jsx(Component, {\n    ...colProps,\n    ref: ref,\n    className: classNames(className, !spans.length && bsPrefix)\n  });\n});\nCol.displayName = 'Col';\nexport default Col;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Container = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  fluid = false,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'container');\n  const suffix = typeof fluid === 'string' ? `-${fluid}` : '-fluid';\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, fluid ? `${prefix}${suffix}` : prefix)\n  });\n});\nContainer.displayName = 'Container';\nexport default Container;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;"],"names":["stateName","setCurrentHeading","svgRef","useRef","useEffect","svg","d3","current","projection","translate","width","height","path","colorScale","domain","range","stateGeoJSONPath","replace","toLowerCase","console","warn","getStateGeoJSONPath","async","geoData","bounds","centroid","dx","dy","scale","Math","max","center","serviceData","features","forEach","geoFeature","serviceFeature","find","s","lga_name","properties","currentValue","selectAll","remove","append","data","enter","attr","d","value","undefined","error","on","event","this","lgaURL","window","location","href","log","fetchData","className","ref","services","populations","locations","allServiceProvidersCsv","nodes","state","currentHeading","useState","selectedService","setSelectedService","React","selectedPopulation","setSelectedPopulation","selectedLocation","setSelectedLocation","selectedLGA","setSelectedLGA","src","logo","alt","Container","Row","Col","sm","DropdownButton","id","title","Dropdown","Item","key","onClick","map","node","navigate","service","population","props","colProps","as","Component","bsPrefix","spans","breakpoints","minBreakpoint","classes","brkPoint","propValue","span","offset","order","infix","push","useCol","length","displayName","fluid","prefix","suffix","decoratedBsPrefix","sizePrefix","cols"],"sourceRoot":""}
{"version":3,"file":"component---src-templates-lga-template-js-6b724e64db59f569b5c5.js","mappings":"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","sources":["webpack://status-view/./src/components/LgaMap.js","webpack://status-view/./src/templates/lgaTemplate.js","webpack://status-view/./node_modules/react-bootstrap/esm/Col.js","webpack://status-view/./node_modules/react-bootstrap/esm/Container.js","webpack://status-view/./node_modules/react-bootstrap/esm/Row.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\n\nconst LgaMap = ({ lgaName, stateName }) => {\n    const svgRef = useRef(null);\n    const [lgaData, setLgaData] = React.useState(null);\n    const offsetY = 150; \n\n    const stateToCodeMapping = {\n        \"Abia\": \"AB\",\n        \"Adamawa\": \"AD\",\n        \"Akwa Ibom\": \"AK\",\n        \"Anambra\": \"AN\",\n        \"Bauchi\": \"BA\",\n        \"Bayelsa\": \"BY\",\n        \"Benue\": \"BE\",\n        \"Borno\": \"BR\",\n        \"Cross River\": \"CR\",\n        \"Delta\": \"DE\",\n        \"Ebonyi\": \"EB\",\n        \"Edo\": \"ED\",\n        \"Ekiti\": \"EK\",\n        \"Enugu\": \"EN\",\n        \"Federal Capital Territory\": \"FC\",\n        \"Gombe\": \"GO\",\n        \"Imo\": \"IM\",\n        \"Jigawa\": \"JI\",\n        \"Kaduna\": \"KD\",\n        \"Kano\": \"KN\",\n        \"Katsina\": \"KT\",\n        \"Kebbi\": \"KB\",\n        \"Kogi\": \"KO\",\n        \"Kwara\": \"KW\",\n        \"Lagos\": \"LA\",\n        \"Nasarawa\": \"NA\",\n        \"Niger\": \"NI\",\n        \"Ogun\": \"OG\",\n        \"Ondo\": \"ON\",\n        \"Osun\": \"OS\",\n        \"Oyo\": \"OY\",\n        \"Plateau\": \"PL\",\n        \"Rivers\": \"RI\",\n        \"Sokoto\": \"SO\",\n        \"Taraba\": \"TA\",\n        \"Yobe\": \"YO\",\n        \"Zamfara\": \"ZA\",\n    };\n\n    const stateCode = stateToCodeMapping[stateName];\n    console.log(\"lgaName:\", lgaName);\nconsole.log(\"stateName:\", stateName);\n\n\n    useEffect(() => {\n        if (!stateCode) {\n            console.error(`No state code found for state: ${stateName}`);\n            return;\n        }\n\n        d3.json(\"/static/lgas.geojson\").then(data => {\n            console.log(\"Loaded GeoJSON data:\", data);\n            const specificLGAData = data.features.filter(\n                feature => feature.properties.lga_name === lgaName\n            );\n\n            if (specificLGAData.length > 0) {\n                setLgaData({\n                    type: \"FeatureCollection\",\n                    features: specificLGAData\n                });\n            }\n        }).catch(error => {\n            console.error(\"Failed to load LGA GeoJSON data\", error);\n        });\n    }, [lgaName, stateName, stateCode]);\n\n    useEffect(() => {\n        if (lgaData && stateCode) {\n            const svg = d3.select(svgRef.current);\n            const centroid = d3.geoCentroid(lgaData);\n            const projection = d3.geoMercator().scale(18500).center(centroid).translate([800 / 2, (800 / 2) - offsetY]);\n            const path = d3.geoPath().projection(projection);\n\n            svg.selectAll(\"*\").remove();\n            svg.append(\"g\").selectAll(\"path\").data(lgaData.features).enter().append(\"path\")\n                .attr(\"d\", path).attr(\"fill\", \"#4E844E\")\n        }\n    }, [lgaData, stateCode]);\n\n    return (\n        <div className=\"lga-map\">\n            <svg ref={svgRef} width={800} height={800}></svg>\n        </div>\n    );\n};\n\nexport default LgaMap;","import React, { useState } from 'react';\nimport { graphql } from 'gatsby';\nimport LgaMap from '../components/LgaMap';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport logo from '../images/NACA.png';\nimport { navigate } from 'gatsby';\n\nconst states = [\n  \"NATIONAL\",\"Abia\", \"Adamawa\", \"Akwa Ibom\", \"Anambra\", \"Bauchi\", \"Bayelsa\", \"Benue\", \n  \"Borno\", \"Cross River\", \"Delta\", \"Ebonyi\", \"Edo\", \"Ekiti\", \"Enugu\", \n  \"Federal Capital Territory\", \"Gombe\", \"Imo\", \"Jigawa\", \"Kaduna\", \"Kano\", \n  \"Katsina\", \"Kebbi\", \"Kogi\", \"Kwara\", \"Lagos\", \"Nasarawa\", \"Niger\", \"Ogun\", \n  \"Ondo\", \"Osun\", \"Oyo\", \"Plateau\", \"Rivers\", \"Sokoto\", \"Taraba\", \"Yobe\", \"Zamfara\"\n];\n\nconst services = [\n  \"All Services\",\n  \"Condom Distribtion\",\n  \"Family Life and HIV/AIDS Education (FLHE)/Sexuality Education\",\n  \"Gender and Human Rights (GHR)\",\n  \"Harm Reduction: Medication-Assisted Treatment (MAT)\",\n  \"Harm Reduction: Needle and Syringe Exchange\",\n  \"HIV Self-Testing (HIVST)\",\n  \"HIV Testing Services (HTS)\",\n  \"Mental Health Services\",\n  \"Pre-Exposure Prophylaxis (PrEP)\",\n  \"Social and Behaviour Change Communication (SBCC)\",\n  \"STI Screening and Treatment\",\n  \"Technical Assistance (TA)\"\n];\n\nconst populations = [\n  \"All Populations\",\n  \"AGYW in school\",\n  \"AGYW out of school\",\n  \"ABYM in school\",\n  \"ABYM out of school\",\n  \"Children living with HIV\",\n  \"General population\",\n  \"HIV-exposed infants\",\n  \"IDP\",\n  \"KP_FSW\",\n  \"KP_MSM\",\n  \"KP_people in enclosed settings\",\n  \"KP_PWID\",\n  \"KP_transgender\",\n  \"OVC\",\n  \"Parents\",\n  \"People living with disabilities\",\n  \"PLHIV\",\n  \"Serodiscordant couples\",\n  \"Teachers\",\n  \"Faith Leaders\",\n  \"Fishermen\",\n  \"Pastoralists\",\n  \"Transport Workers\"\n];\n\nconst locations = [\n  \"All Locations\",\n  \"Community\",\n  \"Facility\"\n];\n\n\nexport const query = graphql`\nquery($state: String!, $lga: String!) {\n  serviceProvidersCsv(state: { eq: $state }, lga_name: { eq: $lga }) {\n    state\n    lga_name\n    serviceProviders\n    CondomDistribution  \n  }\n}\n`;\n\nconst LgaTemplate = ({ data }) => {\n  // Existing variables and state definitions\n  const lgaData = Array.isArray(data.serviceProvidersCsv) ? data.serviceProvidersCsv[0] : data.serviceProvidersCsv;\n  const [currentHeading, setCurrentHeading] = useState(lgaData.lga_name || \"N/A\");\n  const [selectedService, setSelectedService] = useState(services[0]);\n  const [selectedPopulation, setSelectedPopulation] = useState(populations[0]);\n  const [selectedLocation, setSelectedLocation] = useState(locations[0]);\n  const lgaDetails = data.serviceProvidersCsv;\n\n  return (\n    <div className=\"state-map\">\n        <div className=\"header-container\">\n            <img src={logo} alt=\"NACA Logo\" className=\"logo\" />\n            <span className=\"welcome-text\">Mapping HIV Prevention Services, 2023</span>\n            <span className=\"separator\"> - </span>\n            <span className=\"current-heading\">{currentHeading}</span>\n        </div>\n\n        <div className=\"lga-page\">\n            <h1>{lgaData.lga_name}</h1>\n            <h2>{lgaData.state}</h2>\n            <p>No. of Service Providers: {lgaData.serviceProviders}</p>\n            <p>Number of Service Providers involved in Condom Distribution: {lgaData.CondomDistribution}</p>\n        </div>\n\n      <Container>\n        <Row className='row'>\n          <Col sm={8}>\n            <LgaMap lgaName={lgaData.lga_name} stateName={lgaData.state} />\n          </Col>\n          <Col sm={4}>\n            <h2>Filter by:</h2>\n            <h3>Service</h3>\n            <DropdownButton id=\"dropdown-basic-button_filter_service\" title={selectedService}>\n              {services.map(service => (\n                <Dropdown.Item key={service} onClick={() => setSelectedService(service)}>\n                  {service}\n                </Dropdown.Item>\n              ))}\n            </DropdownButton>\n\n            <h3>Target Population</h3>\n            <DropdownButton id=\"dropdown-basic-button_filter_population\" title={selectedPopulation}>\n              {populations.map(population => (\n                <Dropdown.Item key={population} onClick={() => setSelectedPopulation(population)}>\n                  {population}\n                </Dropdown.Item>\n              ))}\n            </DropdownButton>\n\n            <h3>Location</h3>\n            <DropdownButton id=\"dropdown-basic-button_filter_location\" title={selectedLocation}>\n              {locations.map(location => (\n                <Dropdown.Item key={location} onClick={() => setSelectedLocation(location)}>\n                  {location}\n                </Dropdown.Item>\n              ))}\n            </DropdownButton>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n};\n\nexport default LgaTemplate;\n","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useCol({\n  as,\n  bsPrefix,\n  className,\n  ...props\n}) {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'col');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const spans = [];\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let span;\n    let offset;\n    let order;\n    if (typeof propValue === 'object' && propValue != null) {\n      ({\n        span,\n        offset,\n        order\n      } = propValue);\n    } else {\n      span = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (span) spans.push(span === true ? `${bsPrefix}${infix}` : `${bsPrefix}${infix}-${span}`);\n    if (order != null) classes.push(`order${infix}-${order}`);\n    if (offset != null) classes.push(`offset${infix}-${offset}`);\n  });\n  return [{\n    ...props,\n    className: classNames(className, ...spans, ...classes)\n  }, {\n    as,\n    bsPrefix,\n    spans\n  }];\n}\nconst Col = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n(props, ref) => {\n  const [{\n    className,\n    ...colProps\n  }, {\n    as: Component = 'div',\n    bsPrefix,\n    spans\n  }] = useCol(props);\n  return /*#__PURE__*/_jsx(Component, {\n    ...colProps,\n    ref: ref,\n    className: classNames(className, !spans.length && bsPrefix)\n  });\n});\nCol.displayName = 'Col';\nexport default Col;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Container = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  fluid = false,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'container');\n  const suffix = typeof fluid === 'string' ? `-${fluid}` : '-fluid';\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, fluid ? `${prefix}${suffix}` : prefix)\n  });\n});\nContainer.displayName = 'Container';\nexport default Container;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;"],"names":["lgaName","stateName","svgRef","useRef","lgaData","setLgaData","React","stateCode","console","log","useEffect","d3","then","data","specificLGAData","features","filter","feature","properties","lga_name","length","type","catch","error","svg","current","centroid","projection","scale","center","translate","path","selectAll","remove","append","enter","attr","className","ref","width","height","services","populations","locations","Array","isArray","serviceProvidersCsv","currentHeading","setCurrentHeading","useState","selectedService","setSelectedService","selectedPopulation","setSelectedPopulation","selectedLocation","setSelectedLocation","src","logo","alt","state","serviceProviders","CondomDistribution","Container","Row","Col","sm","DropdownButton","id","title","map","service","Dropdown","Item","key","onClick","population","location","props","colProps","as","Component","bsPrefix","spans","breakpoints","minBreakpoint","classes","forEach","brkPoint","propValue","span","offset","order","infix","push","useCol","displayName","fluid","prefix","suffix","decoratedBsPrefix","sizePrefix","cols"],"sourceRoot":""}